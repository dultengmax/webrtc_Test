version: '3.8' # Versi Docker Compose syntax

services:
  # Definisi service untuk backend Node.js signaling server
  backend:
    build:
      context: . # Konteks build adalah direktori saat ini (root proyek)
      dockerfile: Dockerfile.backend # Menggunakan Dockerfile.backend untuk membangun image
    # Catatan: Port 8080 dari backend tidak perlu dipublikasikan langsung ke host
    # karena hanya akan diakses secara internal oleh service 'frontend' (Nginx).
    restart: always # Selalu restart container jika berhenti secara tidak terduga

  # Definisi service untuk frontend Nginx
  frontend:
    build:
      context: . # Konteks build adalah direktori saat ini
      dockerfile: Dockerfile.frontend # Menggunakan Dockerfile.frontend untuk membangun image
    # Catatan: Port 80 dan 443 dari container ini akan secara otomatis dipetakan
    # ke port 80 dan 443 di host oleh Coolify saat Anda menambahkan domain.
    # Tidak perlu mendeklarasikan 'ports' di sini.
    depends_on:
      - backend # Memastikan service 'backend' (Node.js) dimulai sebelum 'frontend' (Nginx)
    restart: always # Selalu restart container jika berhenti secara tidak terduga
