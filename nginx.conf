# nginx.conf

# Server HTTP yang akan me-redirect ke HTTPS
server {
    listen 80;
    listen [::]:80;
    # server_name yourdomain.com www.yourdomain.com; # Coolify akan mengelola ini
    return 301 https://$host$request_uri; # Redirect HTTP ke HTTPS
}

# Server HTTPS (Coolify akan mengisi detail SSL)
server {
    listen 443 ssl http2; # Coolify akan mengaktifkan SSL dan HTTP/2
    listen [::]:443 ssl http2;
    # server_name yourdomain.com www.yourdomain.com; # Coolify akan mengelola ini

    # Konfigurasi SSL (Coolify akan menyuntikkan ini secara otomatis)
    # ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        root /usr/share/nginx/html; # Lokasi file frontend di dalam container
        index index.html;
        try_files $uri $uri/ =404;
    }

    # Reverse proxy untuk WebSocket signaling server (WSS)
    location /ws/ {
        # 'backend' adalah nama service Docker Compose Anda
        # Komunikasi Nginx ke backend adalah HTTP (tidak terenkripsi) di dalam jaringan Docker
        proxy_pass http://backend:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400s; # Penting untuk koneksi WebSocket yang panjang
        proxy_send_timeout 86400s;
    }
}